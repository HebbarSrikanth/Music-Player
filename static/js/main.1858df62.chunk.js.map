{"version":3,"sources":["components/LibrarySongs.js","components/Library.js","components/Nav.js","components/Player.js","components/Song.js","util.js","App.js","index.js"],"names":["LibrarySongs","currentSong","setCurrentSong","setSongs","songs","className","active","onClick","song","newSongList","map","s","id","songHandler","src","coverPicture","alt","name","artist","Library","showLibrary","Nav","setLibrary","icon","faMusic","Progress","useState","isPlaying","setPlaying","currentInfo","duration","completePercentage","currenTime","setTime","useEffect","ref","current","play","useRef","timeHandler","e","Math","round","target","currentTime","end","percentage","getTime","time","floor","slice","styleSlider","transform","controlHandler","type","length","songIndex","findIndex","skipSong","style","background","colors","min","value","max","onChange","faAngleLeft","pause","faPause","faPlay","faAngleRight","onTimeUpdate","onEnded","onLoadedMetadata","Song","chillHop","uuidv4","App","songData","Player","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iMAmBeA,EAjBM,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,YAAaC,EAAsC,EAAtCA,eAAgBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAM3D,OACI,sBAAKC,UAAS,oBAAeJ,EAAYK,OAAS,WAAa,MAAQC,QAAS,kBANhE,SAACC,GACjB,IAAMC,EAAeL,EAAMM,KAAI,SAAAC,GAAC,OAAIA,EAAEC,KAAOJ,EAAKI,GAAd,2BAAwBD,GAAxB,IAA2BL,QAAQ,IAAnC,2BAAiDK,GAAjD,IAAoDL,QAAQ,OAChGJ,EAAeM,GACfL,EAASM,GAG6EI,CAAYZ,IAAlG,UACI,qBAAKa,IAAKb,EAAYc,aAAcC,IAAKf,EAAYgB,OACrD,sBAAKZ,UAAU,mBAAf,UACI,6BAAKJ,EAAYgB,OACjB,6BAAKhB,EAAYiB,gBCOlBC,EAjBC,SAAC,GAAsD,IAApDf,EAAmD,EAAnDA,MAAOF,EAA4C,EAA5CA,eAAgBC,EAA4B,EAA5BA,SAAUiB,EAAkB,EAAlBA,YAChD,OACI,sBAAKf,UAAS,4BAAuBe,EAAc,iBAAmB,IAAtE,UACI,yCACA,8BACKhB,EAAMM,KAAI,SAAAF,GAAI,OAAI,cAAC,EAAD,CAEfP,YAAaO,EACbN,eAAgBA,EAChBC,SAAUA,EACVC,MAAOA,GAJFI,EAAKI,a,cCMfS,EAXH,SAAC,GAAiC,IAA/BD,EAA8B,EAA9BA,YAAaE,EAAiB,EAAjBA,WACxB,OACI,sBAAKjB,UAAU,MAAf,UACI,uCACA,yBAAQE,QAAS,kBAAMe,GAAYF,IAAnC,qBACY,cAAC,IAAD,CAAiBG,KAAMC,aCkGhCC,EAvGE,SAAC,GAAsD,IAApDxB,EAAmD,EAAnDA,YAAaC,EAAsC,EAAtCA,eAAgBE,EAAsB,EAAtBA,MAAOD,EAAe,EAAfA,SAAe,EAEnCuB,oBAAS,GAF0B,mBAE5DC,EAF4D,KAEjDC,EAFiD,OAGrCF,mBAAS,CACnCG,YAAa,EACbC,SAAU,EACVC,mBAAoB,IAN2C,mBAG5DC,EAH4D,KAGhDC,EAHgD,KASnEC,qBAAU,WACFP,GACAQ,EAAIC,QAAQC,SAGjB,CAACpC,IAGJ,IAAMkC,EAAMG,iBAAO,MAabC,EAAc,SAACC,GACjB,IAAMJ,EAAUK,KAAKC,MAAMF,EAAEG,OAAOC,aAC9BC,EAAMJ,KAAKC,MAAMF,EAAEG,OAAOb,UAC1BgB,EAAaL,KAAKC,MAAON,EAAUS,EAAO,KAChDZ,EAAQ,2BACDD,GADA,IAEHH,YAAaW,EAAEG,OAAOC,YACtBd,SAAUU,EAAEG,OAAOb,SACnBC,mBAAoBe,MAItBC,EAAU,SAACC,GACb,OAAOP,KAAKQ,MAAMD,EAAO,IAAM,KAAO,IAAMP,KAAKQ,MAAMD,EAAO,KAAKE,OAAO,IAYxEC,EAAc,CAChBC,UAAU,cAAD,OAAgBpB,EAAWD,mBAA3B,OAGPsB,EAAiB,SAACC,GACpB,IAAMC,EAASnD,EAAMmD,OACfC,EAAYpD,EAAMqD,WAAU,SAAA9C,GAAC,OAAIA,EAAEC,KAAOX,EAAYW,MACxD8C,EAAW,GAEUA,EADZ,SAATJ,EACkB,IAAdE,EAA4BpD,EAAMmD,EAAS,GAC/BnD,EAAMoD,EAAY,GAE9BA,IAAcD,EAAS,EAAcnD,EAAM,GAC/BA,EAAMoD,EAAY,GAEtC,IAAM/C,EAAeL,EAAMM,KAAI,SAAAC,GAAC,OAAIA,EAAEC,KAAO8C,EAAS9C,GAAlB,2BAA4BD,GAA5B,IAA+BL,QAAQ,IAAvC,2BAAqDK,GAArD,IAAwDL,QAAQ,OACpGJ,EAAewD,GACfvD,EAASM,IAGb,OACI,sBAAKJ,UAAU,SAAf,UACI,sBAAKA,UAAU,eAAf,UACI,4BAAI0C,EAAQf,EAAWH,eACvB,sBAAK8B,MACA,CAAEC,WAAW,4BAAD,OAA8B3D,EAAY4D,OAAO,GAAjD,YAAuD5D,EAAY4D,OAAO,GAA1E,MACbxD,UAAU,QAFd,UAII,uBAAOiD,KAAK,QACRQ,IAAK,EACLC,MAAO/B,EAAWH,YAClBmC,IAAKhC,EAAWF,UAAY,EAC5BmC,SAzCA,SAACzB,GACjBP,EAAQ,2BACDD,GADA,IAEHH,YAAaW,EAAEG,OAAOoB,SAE1B5B,EAAIC,QAAQQ,YAAcJ,EAAEG,OAAOoB,SAsCvB,qBAAKJ,MAAOR,EAAa9C,UAAU,oBAEvC,4BAAI2B,EAAWF,SAAWiB,EAAQf,EAAWF,UAAY,WAE7D,sBAAKzB,UAAU,eAAf,UACI,cAAC,IAAD,CAAiBA,UAAU,YAAYE,QAAS,kBAAM8C,EAAe,SAAS9B,KAAM2C,MACpF,cAAC,IAAD,CAAiB3D,QA3ET,WACZoB,GACAQ,EAAIC,QAAQ+B,QACZvC,GAAYD,KAEZQ,EAAIC,QAAQC,OACZT,GAAYD,KAqE+BtB,UAAU,OAAOkB,KAAMI,EAAYyC,IAAUC,MACpF,cAAC,IAAD,CAAiBhE,UAAU,YAAYE,QAAS,kBAAM8C,EAAe,SAAS9B,KAAM+C,SAExF,uBAAOC,aAAchC,EAAaiC,QAAS,kBAAMnB,EAAe,SAASoB,iBAAkBlC,EAAaJ,IAAKA,EAAKrB,IAAKb,EAAYO,WC1FhIkE,EAVF,SAAC,GAAqB,IAAnBzE,EAAkB,EAAlBA,YACZ,OACI,sBAAKI,UAAU,iBAAf,UACI,qBAAKS,IAAKb,EAAYc,aAAcC,IAAKf,EAAYgB,OACrD,6BAAKhB,EAAYgB,OACjB,6BAAKhB,EAAYiB,a,gBCmCdyD,EAzCE,WACb,MAAO,CACH,CACI/D,GAAIgE,cACJ3D,KAAK,eACLC,OAAO,sBACP2C,OAAQ,CAAC,UAAW,WACpBrD,KAAM,+CACNO,aAAc,yGACdT,QAAQ,GAEZ,CACIM,GAAIgE,cACJ3D,KAAK,iBACLC,OAAO,UACP2C,OAAQ,CAAC,UAAW,WACpBrD,KAAK,gDACLO,aAAa,yGACbT,QAAQ,GAEZ,CACIM,GAAIgE,cACJ3D,KAAK,aACLC,OAAO,yBACP2C,OAAQ,CAAC,UAAW,WACpBrD,KAAK,gDACLO,aAAa,yGACbT,QAAQ,GAEZ,CACIM,GAAIgE,cACJ3D,KAAK,kBACLC,OAAO,eACP2C,OAAQ,CAAC,UAAW,WACpBrD,KAAK,gDACLO,aAAa,yGACbT,QAAQ,KCTLuE,EApBH,WAAO,IAAD,EACUnD,mBAASoD,KADnB,mBACT1E,EADS,KACFD,EADE,OAEsBuB,mBAAStB,EAAM,IAFrC,mBAETH,EAFS,KAEIC,EAFJ,OAGkBwB,oBAAS,GAH3B,mBAGTN,EAHS,KAGIE,EAHJ,KAIhB,OACE,sBAAKjB,UAAS,oBAAee,EAAc,iBAAmB,IAA9D,UACE,cAAC,EAAD,CAAKA,YAAaA,EAAaE,WAAYA,IAC3C,cAAC,EAAD,CAAMrB,YAAaA,IACnB,cAAC8E,EAAD,CACE9E,YAAaA,EAAaC,eAAgBA,EAC1CE,MAAOA,EAAOD,SAAUA,IAE1B,cAAC,EAAD,CACEC,MAAOA,EAAOgB,YAAaA,EAC3BlB,eAAgBA,EAAgBC,SAAUA,QClBlD6E,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1858df62.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst LibrarySongs = ({ currentSong, setCurrentSong, setSongs, songs }) => {\r\n    const songHandler = (song) => {\r\n        const newSongList = (songs.map(s => s.id === song.id ? { ...s, active: true } : { ...s, active: false }))\r\n        setCurrentSong(song)\r\n        setSongs(newSongList)\r\n    }\r\n    return (\r\n        <div className={`song-info ${currentSong.active ? 'selected' : null}`} onClick={() => songHandler(currentSong)}>\r\n            <img src={currentSong.coverPicture} alt={currentSong.name} />\r\n            <div className='song-description'>\r\n                <h3>{currentSong.name}</h3>\r\n                <h4>{currentSong.artist}</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LibrarySongs\r\n","import React from 'react'\r\nimport LibrarySongs from './LibrarySongs'\r\n\r\nconst Library = ({ songs, setCurrentSong, setSongs, showLibrary }) => {\r\n    return (\r\n        <div className={`library-container ${showLibrary ? 'active-library' : ''}`}>\r\n            <h2>Library</h2>\r\n            <div>\r\n                {songs.map(song => <LibrarySongs\r\n                    key={song.id}\r\n                    currentSong={song}\r\n                    setCurrentSong={setCurrentSong}\r\n                    setSongs={setSongs}\r\n                    songs={songs}\r\n                />)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Library\r\n","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faMusic } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst Nav = ({ showLibrary, setLibrary }) => {\r\n    return (\r\n        <nav className='nav'>\r\n            <h3>Waves</h3>\r\n            <button onClick={() => setLibrary(!showLibrary)}>\r\n                Library <FontAwesomeIcon icon={faMusic} />\r\n            </button>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlay, faAngleLeft, faAngleRight, faPause } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst Progress = ({ currentSong, setCurrentSong, songs, setSongs }) => {\r\n    //State for playing/pausing\r\n    const [isPlaying, setPlaying] = useState(false)\r\n    const [currenTime, setTime] = useState({\r\n        currentInfo: 0,\r\n        duration: 0,\r\n        completePercentage: 0\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (isPlaying) {\r\n            ref.current.play()\r\n        }\r\n        //eslint-disable-next-line\r\n    }, [currentSong])\r\n\r\n    //Reference for audio tag\r\n    const ref = useRef(null)\r\n\r\n    //Play/Pause Handler\r\n    const playHandler = () => {\r\n        if (isPlaying) {\r\n            ref.current.pause()\r\n            setPlaying(!isPlaying)\r\n        } else {\r\n            ref.current.play()\r\n            setPlaying(!isPlaying)\r\n        }\r\n    }\r\n    //Sond Duration Update\r\n    const timeHandler = (e) => {\r\n        const current = Math.round(e.target.currentTime)\r\n        const end = Math.round(e.target.duration)\r\n        const percentage = Math.round((current / end) * 100)\r\n        setTime({\r\n            ...currenTime,\r\n            currentInfo: e.target.currentTime,\r\n            duration: e.target.duration,\r\n            completePercentage: percentage\r\n        })\r\n    }\r\n    //Make proper time format\r\n    const getTime = (time) => {\r\n        return Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    }\r\n    //Drag then change the value\r\n    const dragHandler = (e) => {\r\n        setTime({\r\n            ...currenTime,\r\n            currentInfo: e.target.value\r\n        })\r\n        ref.current.currentTime = e.target.value\r\n    }\r\n\r\n    //Style complete percentage\r\n    const styleSlider = {\r\n        transform: `translateX(${currenTime.completePercentage}%)`\r\n    }\r\n\r\n    const controlHandler = (type) => {\r\n        const length = songs.length;\r\n        const songIndex = songs.findIndex(s => s.id === currentSong.id)\r\n        let skipSong = '';\r\n        if (type === 'back') {\r\n            if (songIndex === 0) skipSong = songs[length - 1]\r\n            else skipSong = songs[songIndex - 1]\r\n        } else {\r\n            if (songIndex === length - 1) skipSong = songs[0]\r\n            else skipSong = songs[songIndex + 1]\r\n        }\r\n        const newSongList = (songs.map(s => s.id === skipSong.id ? { ...s, active: true } : { ...s, active: false }))\r\n        setCurrentSong(skipSong)\r\n        setSongs(newSongList)\r\n    }\r\n\r\n    return (\r\n        <div className='player'>\r\n            <div className='time-control'>\r\n                <p>{getTime(currenTime.currentInfo)}</p>\r\n                <div style=\r\n                    {{ background: `linear-gradient(to right,${currentSong.colors[0]},${currentSong.colors[1]})` }}\r\n                    className='track'\r\n                >\r\n                    <input type='range'\r\n                        min={0}\r\n                        value={currenTime.currentInfo}\r\n                        max={currenTime.duration || 0}\r\n                        onChange={dragHandler}\r\n                    />\r\n                    <div style={styleSlider} className='track-slider'></div>\r\n                </div>\r\n                <p>{currenTime.duration ? getTime(currenTime.duration) : '-:-'}</p>\r\n            </div>\r\n            <div className='song-control'>\r\n                <FontAwesomeIcon className='skip-back' onClick={() => controlHandler('back')} icon={faAngleLeft} />\r\n                <FontAwesomeIcon onClick={playHandler} className='play' icon={isPlaying ? faPause : faPlay} />\r\n                <FontAwesomeIcon className='skip-next' onClick={() => controlHandler('skip')} icon={faAngleRight} />\r\n            </div>\r\n            <audio onTimeUpdate={timeHandler} onEnded={() => controlHandler('skip')} onLoadedMetadata={timeHandler} ref={ref} src={currentSong.song}></audio>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Progress\r\n","import React from 'react'\r\n\r\nconst Song = ({ currentSong }) => {\r\n    return (\r\n        <div className='song-container'>\r\n            <img src={currentSong.coverPicture} alt={currentSong.name} />\r\n            <h2>{currentSong.name}</h2>\r\n            <h3>{currentSong.artist}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Song\r\n","import { v4 as uuidv4 } from 'uuid'\r\nconst chillHop = () => {\r\n    return [\r\n        {\r\n            id: uuidv4(),\r\n            name: `Jazz Cabbage`,\r\n            artist: `Ian Ewing, Strehlow`,\r\n            colors: ['#A84A4A', '#DAA691'],\r\n            song: 'https://mp3.chillhop.com/serve.php/?mp3=9363',\r\n            coverPicture: 'https://chillhop.com/wp-content/uploads/2020/06/49f6e32ca521fbad46a1b281e3893cf6254bf11d-1024x1024.jpg',\r\n            active: true\r\n        },\r\n        {\r\n            id: uuidv4(),\r\n            name: `Momentary Loss`,\r\n            artist: `Aarigod`,\r\n            colors: ['#A4BE65', '#19220D'],\r\n            song: `https://mp3.chillhop.com/serve.php/?mp3=13009`,\r\n            coverPicture: `https://chillhop.com/wp-content/uploads/2021/02/7f102bdde417f6ead9a120b2b931449e5c12b4da-1024x1024.jpg`,\r\n            active: false\r\n        },\r\n        {\r\n            id: uuidv4(),\r\n            name: `Home Court`,\r\n            artist: `Blue Wednesday, Shopan`,\r\n            colors: ['#B9A7D9', '#7D5E87'],\r\n            song: `https://mp3.chillhop.com/serve.php/?mp3=11233`,\r\n            coverPicture: `https://chillhop.com/wp-content/uploads/2020/12/33a2a875828118a3ff260638a88362936104879a-1024x1024.jpg`,\r\n            active: false\r\n        },\r\n        {\r\n            id: uuidv4(),\r\n            name: `Maple Leaf Pt.2`,\r\n            artist: `Philanthrope`,\r\n            colors: ['#8C332F', '#92574A'],\r\n            song: `https://mp3.chillhop.com/serve.php/?mp3=10243`,\r\n            coverPicture: `https://chillhop.com/wp-content/uploads/2020/09/2899f7cc22ab12e17d0119819aac3ca9dbab46e6-1024x1024.jpg`,\r\n            active: false\r\n        },\r\n    ]\r\n}\r\n\r\nexport default chillHop","import React, { useState } from 'react'\r\nimport Library from './components/Library'\r\nimport Nav from './components/Nav'\r\nimport Player from './components/Player'\r\nimport Song from './components/Song'\r\nimport './styles/app.scss'\r\nimport songData from './util'\r\n\r\nconst App = () => {\r\n  const [songs, setSongs] = useState(songData())\r\n  const [currentSong, setCurrentSong] = useState(songs[0])\r\n  const [showLibrary, setLibrary] = useState(false)\r\n  return (\r\n    <div className={`container ${showLibrary ? 'library-active' : ''}`}>\r\n      <Nav showLibrary={showLibrary} setLibrary={setLibrary} />\r\n      <Song currentSong={currentSong} />\r\n      <Player\r\n        currentSong={currentSong} setCurrentSong={setCurrentSong}\r\n        songs={songs} setSongs={setSongs}\r\n      />\r\n      <Library\r\n        songs={songs} showLibrary={showLibrary}\r\n        setCurrentSong={setCurrentSong} setSongs={setSongs}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}